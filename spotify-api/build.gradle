apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

project.group = GROUP
version = VERSION_NAME

dependencies {
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'com.squareup.retrofit2:converter-jackson:2.2.0'
    compile 'com.squareup.okio:okio:1.11.0'
    compile 'com.google.guava:guava:20.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.5'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'

    testCompile("org.robolectric:robolectric:3.3.2") {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testCompile "junit:junit:4.12"
    testCompile "org.easytesting:fest-assert-core:2.0M10"
    testCompile "org.mockito:mockito-core:2.7.21"

    androidTestCompile 'com.android.support.test:runner:0.5'
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        pickFirst 'META-INF/MANIFEST.MF'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}



android.testOptions.unitTests.all {
    // Configure includes / excludes
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'

    maxHeapSize = '2048m'
    jvmArgs '-XX:MaxPermSize=512m', '-XX:-UseSplitVerifier'
    maxParallelForks = 4
    forkEvery = 150

    afterTest { descriptor, result ->
        println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}


